"use client";
import "./globals.css";

import { persistor, store, useAppDispatch } from "@/store";

import type { Metadata } from "next";
import { PersistGate } from "redux-persist/integration/react";
import { Provider } from "react-redux";
import { Raleway } from "next/font/google";
import { ThemeProvider } from "@/context/theme-provider";
import { Toaster } from "@/components/ui/toaster";
import { useRouter } from "next/navigation"; // Import client-side router

const raleway = Raleway({
  variable: "--font-raleway",
  subsets: ["latin"],
});
const metadata: Metadata = {
  title: "Enginuity",
  description: "Generated by create next app",
};

const AuthCheck = () => {
  const dispatch = useAppDispatch();
  const router = useRouter(); // Hook to navigate
  // const isAuthenticated = useSelector(
  //   (state: RootState) => state.auth.isAuthenticated
  // );

  // useEffect(() => {
  //   dispatch(initializeAuth())
  //     .unwrap()
  //     .catch(() => {
  //       console.log("Initialize auth failed");
  //       dispatch(logout());
  //       router.push("/"); // Redirect on failure
  //     });
  // }, [dispatch, router]);

  // Redirect immediately if the user is not authenticated
  // useEffect(() => {
  //   if (!isAuthenticated) {
  //     router.push("/log-in");
  //   }
  // }, [isAuthenticated, router]);

  return null;
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${raleway.variable} antialiased`}>
        <Provider store={store}>
          <PersistGate loading={null} persistor={persistor}>
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              <AuthCheck />
              {children}
              <Toaster />
            </ThemeProvider>
          </PersistGate>
        </Provider>
      </body>
    </html>
  );
}
